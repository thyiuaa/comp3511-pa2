=== Banker's algorithm input values ===
algorithm = Safety
m = 10
n = 10
work = [10,10,10,10,10,10,10,10,10,10]
alloc = [
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
0,0,0,0,0,0,0,0,0,0
]
max = [
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
]
need = [
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
10,10,10,10,10,10,10,10,10,10
]
finish = [0,0,0,0,0,0,0,0,0,0]
=== Banker's algorithm execution ===
=== Step 0 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [0,0,0,0,0,0,0,0,0,0]
=== Step 1 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,0,0,0,0,0,0,0,0,0]
=== Step 2 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,0,0,0,0,0,0,0,0]
=== Step 3 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,0,0,0,0,0,0,0]
=== Step 4 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,1,0,0,0,0,0,0]
=== Step 5 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,1,1,0,0,0,0,0]
=== Step 6 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,1,1,1,0,0,0,0]
=== Step 7 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,1,1,1,1,0,0,0]
=== Step 8 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,1,1,1,1,1,0,0]
=== Step 9 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,1,1,1,1,1,1,0]
=== Step 10 ===
work = [10,10,10,10,10,10,10,10,10,10]
finish = [1,1,1,1,1,1,1,1,1,1]
=== Banker's algorithm result ===
The system is safe
seq = [0,1,2,3,4,5,6,7,8,9]
